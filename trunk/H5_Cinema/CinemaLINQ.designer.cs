#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace H5_Cinema
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Cinema1")]
	public partial class CinemaLINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBinhLuan(BinhLuan instance);
    partial void UpdateBinhLuan(BinhLuan instance);
    partial void DeleteBinhLuan(BinhLuan instance);
    partial void InsertVe(Ve instance);
    partial void UpdateVe(Ve instance);
    partial void DeleteVe(Ve instance);
    partial void InsertDanhMucGhe(DanhMucGhe instance);
    partial void UpdateDanhMucGhe(DanhMucGhe instance);
    partial void DeleteDanhMucGhe(DanhMucGhe instance);
    partial void InsertDanhMucLoaiPhim(DanhMucLoaiPhim instance);
    partial void UpdateDanhMucLoaiPhim(DanhMucLoaiPhim instance);
    partial void DeleteDanhMucLoaiPhim(DanhMucLoaiPhim instance);
    partial void InsertDanhMucNgayTrongTuan(DanhMucNgayTrongTuan instance);
    partial void UpdateDanhMucNgayTrongTuan(DanhMucNgayTrongTuan instance);
    partial void DeleteDanhMucNgayTrongTuan(DanhMucNgayTrongTuan instance);
    partial void InsertDanhMucNguoiDung(DanhMucNguoiDung instance);
    partial void UpdateDanhMucNguoiDung(DanhMucNguoiDung instance);
    partial void DeleteDanhMucNguoiDung(DanhMucNguoiDung instance);
    partial void InsertDanhMucSuatChieu(DanhMucSuatChieu instance);
    partial void UpdateDanhMucSuatChieu(DanhMucSuatChieu instance);
    partial void DeleteDanhMucSuatChieu(DanhMucSuatChieu instance);
    partial void InsertDanhMucTheLoaiPhim(DanhMucTheLoaiPhim instance);
    partial void UpdateDanhMucTheLoaiPhim(DanhMucTheLoaiPhim instance);
    partial void DeleteDanhMucTheLoaiPhim(DanhMucTheLoaiPhim instance);
    partial void InsertDanhMucTinhTrangBinhLuan(DanhMucTinhTrangBinhLuan instance);
    partial void UpdateDanhMucTinhTrangBinhLuan(DanhMucTinhTrangBinhLuan instance);
    partial void DeleteDanhMucTinhTrangBinhLuan(DanhMucTinhTrangBinhLuan instance);
    partial void InsertDanhMucTinhTrangNguoiDung(DanhMucTinhTrangNguoiDung instance);
    partial void UpdateDanhMucTinhTrangNguoiDung(DanhMucTinhTrangNguoiDung instance);
    partial void DeleteDanhMucTinhTrangNguoiDung(DanhMucTinhTrangNguoiDung instance);
    partial void InsertDatVe(DatVe instance);
    partial void UpdateDatVe(DatVe instance);
    partial void DeleteDatVe(DatVe instance);
    partial void InsertGhe(Ghe instance);
    partial void UpdateGhe(Ghe instance);
    partial void DeleteGhe(Ghe instance);
    partial void InsertLichChieuPhim(LichChieuPhim instance);
    partial void UpdateLichChieuPhim(LichChieuPhim instance);
    partial void DeleteLichChieuPhim(LichChieuPhim instance);
    partial void InsertLichSuNguoiDung(LichSuNguoiDung instance);
    partial void UpdateLichSuNguoiDung(LichSuNguoiDung instance);
    partial void DeleteLichSuNguoiDung(LichSuNguoiDung instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertPhim(Phim instance);
    partial void UpdatePhim(Phim instance);
    partial void DeletePhim(Phim instance);
    partial void InsertPhongChieuPhim(PhongChieuPhim instance);
    partial void UpdatePhongChieuPhim(PhongChieuPhim instance);
    partial void DeletePhongChieuPhim(PhongChieuPhim instance);
    partial void InsertRapChieuPhim(RapChieuPhim instance);
    partial void UpdateRapChieuPhim(RapChieuPhim instance);
    partial void DeleteRapChieuPhim(RapChieuPhim instance);
    partial void InsertSuatChieu(SuatChieu instance);
    partial void UpdateSuatChieu(SuatChieu instance);
    partial void DeleteSuatChieu(SuatChieu instance);
    partial void InsertThamSo(ThamSo instance);
    partial void UpdateThamSo(ThamSo instance);
    partial void DeleteThamSo(ThamSo instance);
    #endregion
		
		public CinemaLINQDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Cinema1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CinemaLINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CinemaLINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CinemaLINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CinemaLINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BinhLuan> BinhLuans
		{
			get
			{
				return this.GetTable<BinhLuan>();
			}
		}
		
		public System.Data.Linq.Table<Ve> Ves
		{
			get
			{
				return this.GetTable<Ve>();
			}
		}
		
		public System.Data.Linq.Table<DanhMucGhe> DanhMucGhes
		{
			get
			{
				return this.GetTable<DanhMucGhe>();
			}
		}
		
		public System.Data.Linq.Table<DanhMucLoaiPhim> DanhMucLoaiPhims
		{
			get
			{
				return this.GetTable<DanhMucLoaiPhim>();
			}
		}
		
		public System.Data.Linq.Table<DanhMucNgayTrongTuan> DanhMucNgayTrongTuans
		{
			get
			{
				return this.GetTable<DanhMucNgayTrongTuan>();
			}
		}
		
		public System.Data.Linq.Table<DanhMucNguoiDung> DanhMucNguoiDungs
		{
			get
			{
				return this.GetTable<DanhMucNguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<DanhMucSuatChieu> DanhMucSuatChieus
		{
			get
			{
				return this.GetTable<DanhMucSuatChieu>();
			}
		}
		
		public System.Data.Linq.Table<DanhMucTheLoaiPhim> DanhMucTheLoaiPhims
		{
			get
			{
				return this.GetTable<DanhMucTheLoaiPhim>();
			}
		}
		
		public System.Data.Linq.Table<DanhMucTinhTrangBinhLuan> DanhMucTinhTrangBinhLuans
		{
			get
			{
				return this.GetTable<DanhMucTinhTrangBinhLuan>();
			}
		}
		
		public System.Data.Linq.Table<DanhMucTinhTrangNguoiDung> DanhMucTinhTrangNguoiDungs
		{
			get
			{
				return this.GetTable<DanhMucTinhTrangNguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<DatVe> DatVes
		{
			get
			{
				return this.GetTable<DatVe>();
			}
		}
		
		public System.Data.Linq.Table<Ghe> Ghes
		{
			get
			{
				return this.GetTable<Ghe>();
			}
		}
		
		public System.Data.Linq.Table<LichChieuPhim> LichChieuPhims
		{
			get
			{
				return this.GetTable<LichChieuPhim>();
			}
		}
		
		public System.Data.Linq.Table<LichSuNguoiDung> LichSuNguoiDungs
		{
			get
			{
				return this.GetTable<LichSuNguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<Phim> Phims
		{
			get
			{
				return this.GetTable<Phim>();
			}
		}
		
		public System.Data.Linq.Table<PhongChieuPhim> PhongChieuPhims
		{
			get
			{
				return this.GetTable<PhongChieuPhim>();
			}
		}
		
		public System.Data.Linq.Table<RapChieuPhim> RapChieuPhims
		{
			get
			{
				return this.GetTable<RapChieuPhim>();
			}
		}
		
		public System.Data.Linq.Table<SuatChieu> SuatChieus
		{
			get
			{
				return this.GetTable<SuatChieu>();
			}
		}
		
		public System.Data.Linq.Table<ThamSo> ThamSos
		{
			get
			{
				return this.GetTable<ThamSo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BinhLuan")]
	public partial class BinhLuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBinhLuan;
		
		private int _MaNguoiDung;
		
		private int _MaPhim;
		
		private string _NoiDungBinhLuan;
		
		private int _TinhTrang;
		
		private EntityRef<DanhMucTinhTrangBinhLuan> _DanhMucTinhTrangBinhLuan;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<Phim> _Phim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBinhLuanChanging(int value);
    partial void OnMaBinhLuanChanged();
    partial void OnMaNguoiDungChanging(int value);
    partial void OnMaNguoiDungChanged();
    partial void OnMaPhimChanging(int value);
    partial void OnMaPhimChanged();
    partial void OnNoiDungBinhLuanChanging(string value);
    partial void OnNoiDungBinhLuanChanged();
    partial void OnTinhTrangChanging(int value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public BinhLuan()
		{
			this._DanhMucTinhTrangBinhLuan = default(EntityRef<DanhMucTinhTrangBinhLuan>);
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._Phim = default(EntityRef<Phim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBinhLuan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaBinhLuan
		{
			get
			{
				return this._MaBinhLuan;
			}
			set
			{
				if ((this._MaBinhLuan != value))
				{
					this.OnMaBinhLuanChanging(value);
					this.SendPropertyChanging();
					this._MaBinhLuan = value;
					this.SendPropertyChanged("MaBinhLuan");
					this.OnMaBinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNguoiDung", DbType="Int NOT NULL")]
		public int MaNguoiDung
		{
			get
			{
				return this._MaNguoiDung;
			}
			set
			{
				if ((this._MaNguoiDung != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaNguoiDung = value;
					this.SendPropertyChanged("MaNguoiDung");
					this.OnMaNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int NOT NULL")]
		public int MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					if (this._Phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungBinhLuan", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NoiDungBinhLuan
		{
			get
			{
				return this._NoiDungBinhLuan;
			}
			set
			{
				if ((this._NoiDungBinhLuan != value))
				{
					this.OnNoiDungBinhLuanChanging(value);
					this.SendPropertyChanging();
					this._NoiDungBinhLuan = value;
					this.SendPropertyChanged("NoiDungBinhLuan");
					this.OnNoiDungBinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Int NOT NULL")]
		public int TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					if (this._DanhMucTinhTrangBinhLuan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucTinhTrangBinhLuan_BinhLuan", Storage="_DanhMucTinhTrangBinhLuan", ThisKey="TinhTrang", OtherKey="MaTinhTrang", IsForeignKey=true)]
		public DanhMucTinhTrangBinhLuan DanhMucTinhTrangBinhLuan
		{
			get
			{
				return this._DanhMucTinhTrangBinhLuan.Entity;
			}
			set
			{
				DanhMucTinhTrangBinhLuan previousValue = this._DanhMucTinhTrangBinhLuan.Entity;
				if (((previousValue != value) 
							|| (this._DanhMucTinhTrangBinhLuan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMucTinhTrangBinhLuan.Entity = null;
						previousValue.BinhLuans.Remove(this);
					}
					this._DanhMucTinhTrangBinhLuan.Entity = value;
					if ((value != null))
					{
						value.BinhLuans.Add(this);
						this._TinhTrang = value.MaTinhTrang;
					}
					else
					{
						this._TinhTrang = default(int);
					}
					this.SendPropertyChanged("DanhMucTinhTrangBinhLuan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BinhLuan", Storage="_NguoiDung", ThisKey="MaNguoiDung", OtherKey="MaNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.BinhLuans.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.BinhLuans.Add(this);
						this._MaNguoiDung = value.MaNguoiDung;
					}
					else
					{
						this._MaNguoiDung = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_BinhLuan", Storage="_Phim", ThisKey="MaPhim", OtherKey="MaPhim", IsForeignKey=true)]
		public Phim Phim
		{
			get
			{
				return this._Phim.Entity;
			}
			set
			{
				Phim previousValue = this._Phim.Entity;
				if (((previousValue != value) 
							|| (this._Phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phim.Entity = null;
						previousValue.BinhLuans.Remove(this);
					}
					this._Phim.Entity = value;
					if ((value != null))
					{
						value.BinhLuans.Add(this);
						this._MaPhim = value.MaPhim;
					}
					else
					{
						this._MaPhim = default(int);
					}
					this.SendPropertyChanged("Phim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ve")]
	public partial class Ve : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaVe;
		
		private int _MaDatVe;
		
		private EntityRef<DatVe> _DatVe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVeChanging(int value);
    partial void OnMaVeChanged();
    partial void OnMaDatVeChanging(int value);
    partial void OnMaDatVeChanged();
    #endregion
		
		public Ve()
		{
			this._DatVe = default(EntityRef<DatVe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaVe
		{
			get
			{
				return this._MaVe;
			}
			set
			{
				if ((this._MaVe != value))
				{
					this.OnMaVeChanging(value);
					this.SendPropertyChanging();
					this._MaVe = value;
					this.SendPropertyChanged("MaVe");
					this.OnMaVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatVe", DbType="Int NOT NULL")]
		public int MaDatVe
		{
			get
			{
				return this._MaDatVe;
			}
			set
			{
				if ((this._MaDatVe != value))
				{
					if (this._DatVe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDatVeChanging(value);
					this.SendPropertyChanging();
					this._MaDatVe = value;
					this.SendPropertyChanged("MaDatVe");
					this.OnMaDatVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatVe_Ve", Storage="_DatVe", ThisKey="MaDatVe", OtherKey="MaDatVe", IsForeignKey=true)]
		public DatVe DatVe
		{
			get
			{
				return this._DatVe.Entity;
			}
			set
			{
				DatVe previousValue = this._DatVe.Entity;
				if (((previousValue != value) 
							|| (this._DatVe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatVe.Entity = null;
						previousValue.Ves.Remove(this);
					}
					this._DatVe.Entity = value;
					if ((value != null))
					{
						value.Ves.Add(this);
						this._MaDatVe = value.MaDatVe;
					}
					else
					{
						this._MaDatVe = default(int);
					}
					this.SendPropertyChanged("DatVe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMucGhe")]
	public partial class DanhMucGhe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDanhMucGhe;
		
		private string _TenDanhMucGhe;
		
		private bool _TinhTrang;
		
		private System.Nullable<int> _GiaDanhMuc;
		
		private EntitySet<Ghe> _Ghes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDanhMucGheChanging(int value);
    partial void OnMaDanhMucGheChanged();
    partial void OnTenDanhMucGheChanging(string value);
    partial void OnTenDanhMucGheChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    partial void OnGiaDanhMucChanging(System.Nullable<int> value);
    partial void OnGiaDanhMucChanged();
    #endregion
		
		public DanhMucGhe()
		{
			this._Ghes = new EntitySet<Ghe>(new Action<Ghe>(this.attach_Ghes), new Action<Ghe>(this.detach_Ghes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhMucGhe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDanhMucGhe
		{
			get
			{
				return this._MaDanhMucGhe;
			}
			set
			{
				if ((this._MaDanhMucGhe != value))
				{
					this.OnMaDanhMucGheChanging(value);
					this.SendPropertyChanging();
					this._MaDanhMucGhe = value;
					this.SendPropertyChanged("MaDanhMucGhe");
					this.OnMaDanhMucGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhMucGhe", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDanhMucGhe
		{
			get
			{
				return this._TenDanhMucGhe;
			}
			set
			{
				if ((this._TenDanhMucGhe != value))
				{
					this.OnTenDanhMucGheChanging(value);
					this.SendPropertyChanging();
					this._TenDanhMucGhe = value;
					this.SendPropertyChanged("TenDanhMucGhe");
					this.OnTenDanhMucGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaDanhMuc", DbType="Int")]
		public System.Nullable<int> GiaDanhMuc
		{
			get
			{
				return this._GiaDanhMuc;
			}
			set
			{
				if ((this._GiaDanhMuc != value))
				{
					this.OnGiaDanhMucChanging(value);
					this.SendPropertyChanging();
					this._GiaDanhMuc = value;
					this.SendPropertyChanged("GiaDanhMuc");
					this.OnGiaDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucGhe_Ghe", Storage="_Ghes", ThisKey="MaDanhMucGhe", OtherKey="MaDanhMucGhe")]
		public EntitySet<Ghe> Ghes
		{
			get
			{
				return this._Ghes;
			}
			set
			{
				this._Ghes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucGhe = this;
		}
		
		private void detach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucGhe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMucLoaiPhim")]
	public partial class DanhMucLoaiPhim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoai;
		
		private string _TenTheLoai;
		
		private System.Nullable<bool> _TinhTrang;
		
		private System.Nullable<int> _GiaDanhMuc;
		
		private EntitySet<Phim> _Phims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(int value);
    partial void OnMaLoaiChanged();
    partial void OnTenTheLoaiChanging(string value);
    partial void OnTenTheLoaiChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    partial void OnGiaDanhMucChanging(System.Nullable<int> value);
    partial void OnGiaDanhMucChanged();
    #endregion
		
		public DanhMucLoaiPhim()
		{
			this._Phims = new EntitySet<Phim>(new Action<Phim>(this.attach_Phims), new Action<Phim>(this.detach_Phims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTheLoai", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TenTheLoai
		{
			get
			{
				return this._TenTheLoai;
			}
			set
			{
				if ((this._TenTheLoai != value))
				{
					this.OnTenTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenTheLoai = value;
					this.SendPropertyChanged("TenTheLoai");
					this.OnTenTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaDanhMuc", DbType="Int")]
		public System.Nullable<int> GiaDanhMuc
		{
			get
			{
				return this._GiaDanhMuc;
			}
			set
			{
				if ((this._GiaDanhMuc != value))
				{
					this.OnGiaDanhMucChanging(value);
					this.SendPropertyChanging();
					this._GiaDanhMuc = value;
					this.SendPropertyChanged("GiaDanhMuc");
					this.OnGiaDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucLoaiPhim_Phim", Storage="_Phims", ThisKey="MaLoai", OtherKey="LoaiPhim")]
		public EntitySet<Phim> Phims
		{
			get
			{
				return this._Phims;
			}
			set
			{
				this._Phims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucLoaiPhim = this;
		}
		
		private void detach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucLoaiPhim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMucNgayTrongTuan")]
	public partial class DanhMucNgayTrongTuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDanhMuc;
		
		private string _TenNgay;
		
		private bool _TinhTrang;
		
		private string _NoiDungKhuyenMai;
		
		private int _GiaDanhMuc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDanhMucChanging(int value);
    partial void OnMaDanhMucChanged();
    partial void OnTenNgayChanging(string value);
    partial void OnTenNgayChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    partial void OnNoiDungKhuyenMaiChanging(string value);
    partial void OnNoiDungKhuyenMaiChanged();
    partial void OnGiaDanhMucChanging(int value);
    partial void OnGiaDanhMucChanged();
    #endregion
		
		public DanhMucNgayTrongTuan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhMuc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDanhMuc
		{
			get
			{
				return this._MaDanhMuc;
			}
			set
			{
				if ((this._MaDanhMuc != value))
				{
					this.OnMaDanhMucChanging(value);
					this.SendPropertyChanging();
					this._MaDanhMuc = value;
					this.SendPropertyChanged("MaDanhMuc");
					this.OnMaDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNgay", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNgay
		{
			get
			{
				return this._TenNgay;
			}
			set
			{
				if ((this._TenNgay != value))
				{
					this.OnTenNgayChanging(value);
					this.SendPropertyChanging();
					this._TenNgay = value;
					this.SendPropertyChanged("TenNgay");
					this.OnTenNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungKhuyenMai", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NoiDungKhuyenMai
		{
			get
			{
				return this._NoiDungKhuyenMai;
			}
			set
			{
				if ((this._NoiDungKhuyenMai != value))
				{
					this.OnNoiDungKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._NoiDungKhuyenMai = value;
					this.SendPropertyChanged("NoiDungKhuyenMai");
					this.OnNoiDungKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaDanhMuc", DbType="Int NOT NULL")]
		public int GiaDanhMuc
		{
			get
			{
				return this._GiaDanhMuc;
			}
			set
			{
				if ((this._GiaDanhMuc != value))
				{
					this.OnGiaDanhMucChanging(value);
					this.SendPropertyChanging();
					this._GiaDanhMuc = value;
					this.SendPropertyChanged("GiaDanhMuc");
					this.OnGiaDanhMucChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMucNguoiDung")]
	public partial class DanhMucNguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDanhMucNguoiDung;
		
		private string _TenDanhMucNguoiDung;
		
		private bool _TinhTrang;
		
		private EntitySet<NguoiDung> _NguoiDungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDanhMucNguoiDungChanging(int value);
    partial void OnMaDanhMucNguoiDungChanged();
    partial void OnTenDanhMucNguoiDungChanging(string value);
    partial void OnTenDanhMucNguoiDungChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public DanhMucNguoiDung()
		{
			this._NguoiDungs = new EntitySet<NguoiDung>(new Action<NguoiDung>(this.attach_NguoiDungs), new Action<NguoiDung>(this.detach_NguoiDungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhMucNguoiDung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDanhMucNguoiDung
		{
			get
			{
				return this._MaDanhMucNguoiDung;
			}
			set
			{
				if ((this._MaDanhMucNguoiDung != value))
				{
					this.OnMaDanhMucNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaDanhMucNguoiDung = value;
					this.SendPropertyChanged("MaDanhMucNguoiDung");
					this.OnMaDanhMucNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhMucNguoiDung", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDanhMucNguoiDung
		{
			get
			{
				return this._TenDanhMucNguoiDung;
			}
			set
			{
				if ((this._TenDanhMucNguoiDung != value))
				{
					this.OnTenDanhMucNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._TenDanhMucNguoiDung = value;
					this.SendPropertyChanged("TenDanhMucNguoiDung");
					this.OnTenDanhMucNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucNguoiDung_NguoiDung", Storage="_NguoiDungs", ThisKey="MaDanhMucNguoiDung", OtherKey="MaDanhMucNguoiDung")]
		public EntitySet<NguoiDung> NguoiDungs
		{
			get
			{
				return this._NguoiDungs;
			}
			set
			{
				this._NguoiDungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucNguoiDung = this;
		}
		
		private void detach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucNguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMucSuatChieu")]
	public partial class DanhMucSuatChieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDanhMucSuatChieu;
		
		private System.DateTime _ThoiGianBatDau;
		
		private bool _TinhTrang;
		
		private int _GiaDanhMuc;
		
		private EntitySet<SuatChieu> _SuatChieus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDanhMucSuatChieuChanging(int value);
    partial void OnMaDanhMucSuatChieuChanged();
    partial void OnThoiGianBatDauChanging(System.DateTime value);
    partial void OnThoiGianBatDauChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    partial void OnGiaDanhMucChanging(int value);
    partial void OnGiaDanhMucChanged();
    #endregion
		
		public DanhMucSuatChieu()
		{
			this._SuatChieus = new EntitySet<SuatChieu>(new Action<SuatChieu>(this.attach_SuatChieus), new Action<SuatChieu>(this.detach_SuatChieus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhMucSuatChieu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDanhMucSuatChieu
		{
			get
			{
				return this._MaDanhMucSuatChieu;
			}
			set
			{
				if ((this._MaDanhMucSuatChieu != value))
				{
					this.OnMaDanhMucSuatChieuChanging(value);
					this.SendPropertyChanging();
					this._MaDanhMucSuatChieu = value;
					this.SendPropertyChanged("MaDanhMucSuatChieu");
					this.OnMaDanhMucSuatChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBatDau", DbType="DateTime NOT NULL")]
		public System.DateTime ThoiGianBatDau
		{
			get
			{
				return this._ThoiGianBatDau;
			}
			set
			{
				if ((this._ThoiGianBatDau != value))
				{
					this.OnThoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBatDau = value;
					this.SendPropertyChanged("ThoiGianBatDau");
					this.OnThoiGianBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaDanhMuc", DbType="Int NOT NULL")]
		public int GiaDanhMuc
		{
			get
			{
				return this._GiaDanhMuc;
			}
			set
			{
				if ((this._GiaDanhMuc != value))
				{
					this.OnGiaDanhMucChanging(value);
					this.SendPropertyChanging();
					this._GiaDanhMuc = value;
					this.SendPropertyChanged("GiaDanhMuc");
					this.OnGiaDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucSuatChieu_SuatChieu", Storage="_SuatChieus", ThisKey="MaDanhMucSuatChieu", OtherKey="MaDanhMucSuatChieu")]
		public EntitySet<SuatChieu> SuatChieus
		{
			get
			{
				return this._SuatChieus;
			}
			set
			{
				this._SuatChieus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SuatChieus(SuatChieu entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucSuatChieu = this;
		}
		
		private void detach_SuatChieus(SuatChieu entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucSuatChieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMucTheLoaiPhim")]
	public partial class DanhMucTheLoaiPhim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDanhMucTheLoaiPhim;
		
		private string _TenDanhMucTheLoaiPhim;
		
		private bool _TinhTrang;
		
		private EntitySet<Phim> _Phims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDanhMucTheLoaiPhimChanging(int value);
    partial void OnMaDanhMucTheLoaiPhimChanged();
    partial void OnTenDanhMucTheLoaiPhimChanging(string value);
    partial void OnTenDanhMucTheLoaiPhimChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public DanhMucTheLoaiPhim()
		{
			this._Phims = new EntitySet<Phim>(new Action<Phim>(this.attach_Phims), new Action<Phim>(this.detach_Phims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhMucTheLoaiPhim", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDanhMucTheLoaiPhim
		{
			get
			{
				return this._MaDanhMucTheLoaiPhim;
			}
			set
			{
				if ((this._MaDanhMucTheLoaiPhim != value))
				{
					this.OnMaDanhMucTheLoaiPhimChanging(value);
					this.SendPropertyChanging();
					this._MaDanhMucTheLoaiPhim = value;
					this.SendPropertyChanged("MaDanhMucTheLoaiPhim");
					this.OnMaDanhMucTheLoaiPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhMucTheLoaiPhim", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDanhMucTheLoaiPhim
		{
			get
			{
				return this._TenDanhMucTheLoaiPhim;
			}
			set
			{
				if ((this._TenDanhMucTheLoaiPhim != value))
				{
					this.OnTenDanhMucTheLoaiPhimChanging(value);
					this.SendPropertyChanging();
					this._TenDanhMucTheLoaiPhim = value;
					this.SendPropertyChanged("TenDanhMucTheLoaiPhim");
					this.OnTenDanhMucTheLoaiPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucTheLoaiPhim_Phim", Storage="_Phims", ThisKey="MaDanhMucTheLoaiPhim", OtherKey="TheLoai")]
		public EntitySet<Phim> Phims
		{
			get
			{
				return this._Phims;
			}
			set
			{
				this._Phims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucTheLoaiPhim = this;
		}
		
		private void detach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucTheLoaiPhim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMucTinhTrangBinhLuan")]
	public partial class DanhMucTinhTrangBinhLuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTinhTrang;
		
		private string _TenTinhTrang;
		
		private bool _TinhTrang;
		
		private EntitySet<BinhLuan> _BinhLuans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTinhTrangChanging(int value);
    partial void OnMaTinhTrangChanged();
    partial void OnTenTinhTrangChanging(string value);
    partial void OnTenTinhTrangChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public DanhMucTinhTrangBinhLuan()
		{
			this._BinhLuans = new EntitySet<BinhLuan>(new Action<BinhLuan>(this.attach_BinhLuans), new Action<BinhLuan>(this.detach_BinhLuans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinhTrang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTinhTrang
		{
			get
			{
				return this._MaTinhTrang;
			}
			set
			{
				if ((this._MaTinhTrang != value))
				{
					this.OnMaTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTrang = value;
					this.SendPropertyChanged("MaTinhTrang");
					this.OnMaTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTinhTrang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTinhTrang
		{
			get
			{
				return this._TenTinhTrang;
			}
			set
			{
				if ((this._TenTinhTrang != value))
				{
					this.OnTenTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TenTinhTrang = value;
					this.SendPropertyChanged("TenTinhTrang");
					this.OnTenTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucTinhTrangBinhLuan_BinhLuan", Storage="_BinhLuans", ThisKey="MaTinhTrang", OtherKey="TinhTrang")]
		public EntitySet<BinhLuan> BinhLuans
		{
			get
			{
				return this._BinhLuans;
			}
			set
			{
				this._BinhLuans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucTinhTrangBinhLuan = this;
		}
		
		private void detach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucTinhTrangBinhLuan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMucTinhTrangNguoiDung")]
	public partial class DanhMucTinhTrangNguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDanhMucTinhTrangNguoDung;
		
		private string _TenDanhMucTinhTrangNguoiDung;
		
		private bool _TinhTrang;
		
		private EntitySet<NguoiDung> _NguoiDungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDanhMucTinhTrangNguoDungChanging(int value);
    partial void OnMaDanhMucTinhTrangNguoDungChanged();
    partial void OnTenDanhMucTinhTrangNguoiDungChanging(string value);
    partial void OnTenDanhMucTinhTrangNguoiDungChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public DanhMucTinhTrangNguoiDung()
		{
			this._NguoiDungs = new EntitySet<NguoiDung>(new Action<NguoiDung>(this.attach_NguoiDungs), new Action<NguoiDung>(this.detach_NguoiDungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhMucTinhTrangNguoDung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDanhMucTinhTrangNguoDung
		{
			get
			{
				return this._MaDanhMucTinhTrangNguoDung;
			}
			set
			{
				if ((this._MaDanhMucTinhTrangNguoDung != value))
				{
					this.OnMaDanhMucTinhTrangNguoDungChanging(value);
					this.SendPropertyChanging();
					this._MaDanhMucTinhTrangNguoDung = value;
					this.SendPropertyChanged("MaDanhMucTinhTrangNguoDung");
					this.OnMaDanhMucTinhTrangNguoDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhMucTinhTrangNguoiDung", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDanhMucTinhTrangNguoiDung
		{
			get
			{
				return this._TenDanhMucTinhTrangNguoiDung;
			}
			set
			{
				if ((this._TenDanhMucTinhTrangNguoiDung != value))
				{
					this.OnTenDanhMucTinhTrangNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._TenDanhMucTinhTrangNguoiDung = value;
					this.SendPropertyChanged("TenDanhMucTinhTrangNguoiDung");
					this.OnTenDanhMucTinhTrangNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucTinhTrangNguoiDung_NguoiDung", Storage="_NguoiDungs", ThisKey="MaDanhMucTinhTrangNguoDung", OtherKey="TinhTrang")]
		public EntitySet<NguoiDung> NguoiDungs
		{
			get
			{
				return this._NguoiDungs;
			}
			set
			{
				this._NguoiDungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucTinhTrangNguoiDung = this;
		}
		
		private void detach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucTinhTrangNguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatVe")]
	public partial class DatVe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDatVe;
		
		private int _MaNguoiDung;
		
		private int _MaGhe;
		
		private int _ThoiDiemDat;
		
		private int _TinhTrang;
		
		private int _GiaVe;
		
		private bool _DaThanhToan;
		
		private int _MaSuatChieu;
		
		private EntitySet<Ve> _Ves;
		
		private EntityRef<Ghe> _Ghe;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<SuatChieu> _SuatChieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDatVeChanging(int value);
    partial void OnMaDatVeChanged();
    partial void OnMaNguoiDungChanging(int value);
    partial void OnMaNguoiDungChanged();
    partial void OnMaGheChanging(int value);
    partial void OnMaGheChanged();
    partial void OnThoiDiemDatChanging(int value);
    partial void OnThoiDiemDatChanged();
    partial void OnTinhTrangChanging(int value);
    partial void OnTinhTrangChanged();
    partial void OnGiaVeChanging(int value);
    partial void OnGiaVeChanged();
    partial void OnDaThanhToanChanging(bool value);
    partial void OnDaThanhToanChanged();
    partial void OnMaSuatChieuChanging(int value);
    partial void OnMaSuatChieuChanged();
    #endregion
		
		public DatVe()
		{
			this._Ves = new EntitySet<Ve>(new Action<Ve>(this.attach_Ves), new Action<Ve>(this.detach_Ves));
			this._Ghe = default(EntityRef<Ghe>);
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._SuatChieu = default(EntityRef<SuatChieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatVe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDatVe
		{
			get
			{
				return this._MaDatVe;
			}
			set
			{
				if ((this._MaDatVe != value))
				{
					this.OnMaDatVeChanging(value);
					this.SendPropertyChanging();
					this._MaDatVe = value;
					this.SendPropertyChanged("MaDatVe");
					this.OnMaDatVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNguoiDung", DbType="Int NOT NULL")]
		public int MaNguoiDung
		{
			get
			{
				return this._MaNguoiDung;
			}
			set
			{
				if ((this._MaNguoiDung != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaNguoiDung = value;
					this.SendPropertyChanged("MaNguoiDung");
					this.OnMaNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGhe", DbType="Int NOT NULL")]
		public int MaGhe
		{
			get
			{
				return this._MaGhe;
			}
			set
			{
				if ((this._MaGhe != value))
				{
					if (this._Ghe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGheChanging(value);
					this.SendPropertyChanging();
					this._MaGhe = value;
					this.SendPropertyChanged("MaGhe");
					this.OnMaGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiDiemDat", DbType="Int NOT NULL")]
		public int ThoiDiemDat
		{
			get
			{
				return this._ThoiDiemDat;
			}
			set
			{
				if ((this._ThoiDiemDat != value))
				{
					this.OnThoiDiemDatChanging(value);
					this.SendPropertyChanging();
					this._ThoiDiemDat = value;
					this.SendPropertyChanged("ThoiDiemDat");
					this.OnThoiDiemDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Int NOT NULL")]
		public int TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaVe", DbType="Int NOT NULL")]
		public int GiaVe
		{
			get
			{
				return this._GiaVe;
			}
			set
			{
				if ((this._GiaVe != value))
				{
					this.OnGiaVeChanging(value);
					this.SendPropertyChanging();
					this._GiaVe = value;
					this.SendPropertyChanged("GiaVe");
					this.OnGiaVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaThanhToan", DbType="Bit NOT NULL")]
		public bool DaThanhToan
		{
			get
			{
				return this._DaThanhToan;
			}
			set
			{
				if ((this._DaThanhToan != value))
				{
					this.OnDaThanhToanChanging(value);
					this.SendPropertyChanging();
					this._DaThanhToan = value;
					this.SendPropertyChanged("DaThanhToan");
					this.OnDaThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSuatChieu", DbType="Int NOT NULL")]
		public int MaSuatChieu
		{
			get
			{
				return this._MaSuatChieu;
			}
			set
			{
				if ((this._MaSuatChieu != value))
				{
					if (this._SuatChieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSuatChieuChanging(value);
					this.SendPropertyChanging();
					this._MaSuatChieu = value;
					this.SendPropertyChanged("MaSuatChieu");
					this.OnMaSuatChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatVe_Ve", Storage="_Ves", ThisKey="MaDatVe", OtherKey="MaDatVe")]
		public EntitySet<Ve> Ves
		{
			get
			{
				return this._Ves;
			}
			set
			{
				this._Ves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ghe_DatVe", Storage="_Ghe", ThisKey="MaGhe", OtherKey="MaGhe", IsForeignKey=true)]
		public Ghe Ghe
		{
			get
			{
				return this._Ghe.Entity;
			}
			set
			{
				Ghe previousValue = this._Ghe.Entity;
				if (((previousValue != value) 
							|| (this._Ghe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ghe.Entity = null;
						previousValue.DatVes.Remove(this);
					}
					this._Ghe.Entity = value;
					if ((value != null))
					{
						value.DatVes.Add(this);
						this._MaGhe = value.MaGhe;
					}
					else
					{
						this._MaGhe = default(int);
					}
					this.SendPropertyChanged("Ghe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DatVe", Storage="_NguoiDung", ThisKey="MaNguoiDung", OtherKey="MaNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.DatVes.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.DatVes.Add(this);
						this._MaNguoiDung = value.MaNguoiDung;
					}
					else
					{
						this._MaNguoiDung = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuatChieu_DatVe", Storage="_SuatChieu", ThisKey="MaSuatChieu", OtherKey="MaSuatChieu", IsForeignKey=true)]
		public SuatChieu SuatChieu
		{
			get
			{
				return this._SuatChieu.Entity;
			}
			set
			{
				SuatChieu previousValue = this._SuatChieu.Entity;
				if (((previousValue != value) 
							|| (this._SuatChieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuatChieu.Entity = null;
						previousValue.DatVes.Remove(this);
					}
					this._SuatChieu.Entity = value;
					if ((value != null))
					{
						value.DatVes.Add(this);
						this._MaSuatChieu = value.MaSuatChieu;
					}
					else
					{
						this._MaSuatChieu = default(int);
					}
					this.SendPropertyChanged("SuatChieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.DatVe = this;
		}
		
		private void detach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.DatVe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ghe")]
	public partial class Ghe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGhe;
		
		private int _MaPhongChieuPhim;
		
		private string _TenGhe;
		
		private int _MaDanhMucGhe;
		
		private int _TinhTrang;
		
		private char _Hang;
		
		private int _SoThuTu;
		
		private EntitySet<DatVe> _DatVes;
		
		private EntityRef<DanhMucGhe> _DanhMucGhe;
		
		private EntityRef<PhongChieuPhim> _PhongChieuPhim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGheChanging(int value);
    partial void OnMaGheChanged();
    partial void OnMaPhongChieuPhimChanging(int value);
    partial void OnMaPhongChieuPhimChanged();
    partial void OnTenGheChanging(string value);
    partial void OnTenGheChanged();
    partial void OnMaDanhMucGheChanging(int value);
    partial void OnMaDanhMucGheChanged();
    partial void OnTinhTrangChanging(int value);
    partial void OnTinhTrangChanged();
    partial void OnHangChanging(char value);
    partial void OnHangChanged();
    partial void OnSoThuTuChanging(int value);
    partial void OnSoThuTuChanged();
    #endregion
		
		public Ghe()
		{
			this._DatVes = new EntitySet<DatVe>(new Action<DatVe>(this.attach_DatVes), new Action<DatVe>(this.detach_DatVes));
			this._DanhMucGhe = default(EntityRef<DanhMucGhe>);
			this._PhongChieuPhim = default(EntityRef<PhongChieuPhim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGhe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaGhe
		{
			get
			{
				return this._MaGhe;
			}
			set
			{
				if ((this._MaGhe != value))
				{
					this.OnMaGheChanging(value);
					this.SendPropertyChanging();
					this._MaGhe = value;
					this.SendPropertyChanged("MaGhe");
					this.OnMaGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhongChieuPhim", DbType="Int NOT NULL")]
		public int MaPhongChieuPhim
		{
			get
			{
				return this._MaPhongChieuPhim;
			}
			set
			{
				if ((this._MaPhongChieuPhim != value))
				{
					if (this._PhongChieuPhim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChieuPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhongChieuPhim = value;
					this.SendPropertyChanged("MaPhongChieuPhim");
					this.OnMaPhongChieuPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGhe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenGhe
		{
			get
			{
				return this._TenGhe;
			}
			set
			{
				if ((this._TenGhe != value))
				{
					this.OnTenGheChanging(value);
					this.SendPropertyChanging();
					this._TenGhe = value;
					this.SendPropertyChanged("TenGhe");
					this.OnTenGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhMucGhe", DbType="Int NOT NULL")]
		public int MaDanhMucGhe
		{
			get
			{
				return this._MaDanhMucGhe;
			}
			set
			{
				if ((this._MaDanhMucGhe != value))
				{
					if (this._DanhMucGhe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDanhMucGheChanging(value);
					this.SendPropertyChanging();
					this._MaDanhMucGhe = value;
					this.SendPropertyChanged("MaDanhMucGhe");
					this.OnMaDanhMucGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Int NOT NULL")]
		public int TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hang", DbType="Char(1) NOT NULL")]
		public char Hang
		{
			get
			{
				return this._Hang;
			}
			set
			{
				if ((this._Hang != value))
				{
					this.OnHangChanging(value);
					this.SendPropertyChanging();
					this._Hang = value;
					this.SendPropertyChanged("Hang");
					this.OnHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoThuTu", DbType="Int NOT NULL")]
		public int SoThuTu
		{
			get
			{
				return this._SoThuTu;
			}
			set
			{
				if ((this._SoThuTu != value))
				{
					this.OnSoThuTuChanging(value);
					this.SendPropertyChanging();
					this._SoThuTu = value;
					this.SendPropertyChanged("SoThuTu");
					this.OnSoThuTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ghe_DatVe", Storage="_DatVes", ThisKey="MaGhe", OtherKey="MaGhe")]
		public EntitySet<DatVe> DatVes
		{
			get
			{
				return this._DatVes;
			}
			set
			{
				this._DatVes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucGhe_Ghe", Storage="_DanhMucGhe", ThisKey="MaDanhMucGhe", OtherKey="MaDanhMucGhe", IsForeignKey=true)]
		public DanhMucGhe DanhMucGhe
		{
			get
			{
				return this._DanhMucGhe.Entity;
			}
			set
			{
				DanhMucGhe previousValue = this._DanhMucGhe.Entity;
				if (((previousValue != value) 
							|| (this._DanhMucGhe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMucGhe.Entity = null;
						previousValue.Ghes.Remove(this);
					}
					this._DanhMucGhe.Entity = value;
					if ((value != null))
					{
						value.Ghes.Add(this);
						this._MaDanhMucGhe = value.MaDanhMucGhe;
					}
					else
					{
						this._MaDanhMucGhe = default(int);
					}
					this.SendPropertyChanged("DanhMucGhe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongChieuPhim_Ghe", Storage="_PhongChieuPhim", ThisKey="MaPhongChieuPhim", OtherKey="MaPhongChieuPhim", IsForeignKey=true)]
		public PhongChieuPhim PhongChieuPhim
		{
			get
			{
				return this._PhongChieuPhim.Entity;
			}
			set
			{
				PhongChieuPhim previousValue = this._PhongChieuPhim.Entity;
				if (((previousValue != value) 
							|| (this._PhongChieuPhim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongChieuPhim.Entity = null;
						previousValue.Ghes.Remove(this);
					}
					this._PhongChieuPhim.Entity = value;
					if ((value != null))
					{
						value.Ghes.Add(this);
						this._MaPhongChieuPhim = value.MaPhongChieuPhim;
					}
					else
					{
						this._MaPhongChieuPhim = default(int);
					}
					this.SendPropertyChanged("PhongChieuPhim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatVes(DatVe entity)
		{
			this.SendPropertyChanging();
			entity.Ghe = this;
		}
		
		private void detach_DatVes(DatVe entity)
		{
			this.SendPropertyChanging();
			entity.Ghe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichChieuPhim")]
	public partial class LichChieuPhim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLichChieuPhim;
		
		private bool _TinhTrang;
		
		private System.DateTime _NgayChieu;
		
		private EntitySet<SuatChieu> _SuatChieus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLichChieuPhimChanging(int value);
    partial void OnMaLichChieuPhimChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    partial void OnNgayChieuChanging(System.DateTime value);
    partial void OnNgayChieuChanged();
    #endregion
		
		public LichChieuPhim()
		{
			this._SuatChieus = new EntitySet<SuatChieu>(new Action<SuatChieu>(this.attach_SuatChieus), new Action<SuatChieu>(this.detach_SuatChieus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLichChieuPhim", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLichChieuPhim
		{
			get
			{
				return this._MaLichChieuPhim;
			}
			set
			{
				if ((this._MaLichChieuPhim != value))
				{
					this.OnMaLichChieuPhimChanging(value);
					this.SendPropertyChanging();
					this._MaLichChieuPhim = value;
					this.SendPropertyChanged("MaLichChieuPhim");
					this.OnMaLichChieuPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayChieu", DbType="DateTime NOT NULL")]
		public System.DateTime NgayChieu
		{
			get
			{
				return this._NgayChieu;
			}
			set
			{
				if ((this._NgayChieu != value))
				{
					this.OnNgayChieuChanging(value);
					this.SendPropertyChanging();
					this._NgayChieu = value;
					this.SendPropertyChanged("NgayChieu");
					this.OnNgayChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichChieuPhim_SuatChieu", Storage="_SuatChieus", ThisKey="MaLichChieuPhim", OtherKey="MaLichChieu")]
		public EntitySet<SuatChieu> SuatChieus
		{
			get
			{
				return this._SuatChieus;
			}
			set
			{
				this._SuatChieus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SuatChieus(SuatChieu entity)
		{
			this.SendPropertyChanging();
			entity.LichChieuPhim = this;
		}
		
		private void detach_SuatChieus(SuatChieu entity)
		{
			this.SendPropertyChanging();
			entity.LichChieuPhim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichSuNguoiDung")]
	public partial class LichSuNguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLichSuNguoiDung;
		
		private int _MaNguoiDung;
		
		private double _TongThoiGianDangNhap;
		
		private System.DateTime _ThoiGianDangNhapGanNhat;
		
		private System.DateTime _ThoiGianDangKi;
		
		private string _ThongTinKhac;
		
		private bool _TinhTrang;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLichSuNguoiDungChanging(int value);
    partial void OnMaLichSuNguoiDungChanged();
    partial void OnMaNguoiDungChanging(int value);
    partial void OnMaNguoiDungChanged();
    partial void OnTongThoiGianDangNhapChanging(double value);
    partial void OnTongThoiGianDangNhapChanged();
    partial void OnThoiGianDangNhapGanNhatChanging(System.DateTime value);
    partial void OnThoiGianDangNhapGanNhatChanged();
    partial void OnThoiGianDangKiChanging(System.DateTime value);
    partial void OnThoiGianDangKiChanged();
    partial void OnThongTinKhacChanging(string value);
    partial void OnThongTinKhacChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public LichSuNguoiDung()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLichSuNguoiDung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLichSuNguoiDung
		{
			get
			{
				return this._MaLichSuNguoiDung;
			}
			set
			{
				if ((this._MaLichSuNguoiDung != value))
				{
					this.OnMaLichSuNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaLichSuNguoiDung = value;
					this.SendPropertyChanged("MaLichSuNguoiDung");
					this.OnMaLichSuNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNguoiDung", DbType="Int NOT NULL")]
		public int MaNguoiDung
		{
			get
			{
				return this._MaNguoiDung;
			}
			set
			{
				if ((this._MaNguoiDung != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaNguoiDung = value;
					this.SendPropertyChanged("MaNguoiDung");
					this.OnMaNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongThoiGianDangNhap", DbType="Float NOT NULL")]
		public double TongThoiGianDangNhap
		{
			get
			{
				return this._TongThoiGianDangNhap;
			}
			set
			{
				if ((this._TongThoiGianDangNhap != value))
				{
					this.OnTongThoiGianDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TongThoiGianDangNhap = value;
					this.SendPropertyChanged("TongThoiGianDangNhap");
					this.OnTongThoiGianDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianDangNhapGanNhat", DbType="DateTime NOT NULL")]
		public System.DateTime ThoiGianDangNhapGanNhat
		{
			get
			{
				return this._ThoiGianDangNhapGanNhat;
			}
			set
			{
				if ((this._ThoiGianDangNhapGanNhat != value))
				{
					this.OnThoiGianDangNhapGanNhatChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianDangNhapGanNhat = value;
					this.SendPropertyChanged("ThoiGianDangNhapGanNhat");
					this.OnThoiGianDangNhapGanNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianDangKi", DbType="DateTime NOT NULL")]
		public System.DateTime ThoiGianDangKi
		{
			get
			{
				return this._ThoiGianDangKi;
			}
			set
			{
				if ((this._ThoiGianDangKi != value))
				{
					this.OnThoiGianDangKiChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianDangKi = value;
					this.SendPropertyChanged("ThoiGianDangKi");
					this.OnThoiGianDangKiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThongTinKhac", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ThongTinKhac
		{
			get
			{
				return this._ThongTinKhac;
			}
			set
			{
				if ((this._ThongTinKhac != value))
				{
					this.OnThongTinKhacChanging(value);
					this.SendPropertyChanging();
					this._ThongTinKhac = value;
					this.SendPropertyChanged("ThongTinKhac");
					this.OnThongTinKhacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_LichSuNguoiDung", Storage="_NguoiDung", ThisKey="MaNguoiDung", OtherKey="MaNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.LichSuNguoiDungs.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.LichSuNguoiDungs.Add(this);
						this._MaNguoiDung = value.MaNguoiDung;
					}
					else
					{
						this._MaNguoiDung = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNguoiDung;
		
		private int _MaDanhMucNguoiDung;
		
		private string _TenNguoiDung;
		
		private string _MatKhau;
		
		private string _DiaChi;
		
		private string _Email;
		
		private int _TinhTrang;
		
		private EntitySet<BinhLuan> _BinhLuans;
		
		private EntitySet<DatVe> _DatVes;
		
		private EntitySet<LichSuNguoiDung> _LichSuNguoiDungs;
		
		private EntityRef<DanhMucNguoiDung> _DanhMucNguoiDung;
		
		private EntityRef<DanhMucTinhTrangNguoiDung> _DanhMucTinhTrangNguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNguoiDungChanging(int value);
    partial void OnMaNguoiDungChanged();
    partial void OnMaDanhMucNguoiDungChanging(int value);
    partial void OnMaDanhMucNguoiDungChanged();
    partial void OnTenNguoiDungChanging(string value);
    partial void OnTenNguoiDungChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTinhTrangChanging(int value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public NguoiDung()
		{
			this._BinhLuans = new EntitySet<BinhLuan>(new Action<BinhLuan>(this.attach_BinhLuans), new Action<BinhLuan>(this.detach_BinhLuans));
			this._DatVes = new EntitySet<DatVe>(new Action<DatVe>(this.attach_DatVes), new Action<DatVe>(this.detach_DatVes));
			this._LichSuNguoiDungs = new EntitySet<LichSuNguoiDung>(new Action<LichSuNguoiDung>(this.attach_LichSuNguoiDungs), new Action<LichSuNguoiDung>(this.detach_LichSuNguoiDungs));
			this._DanhMucNguoiDung = default(EntityRef<DanhMucNguoiDung>);
			this._DanhMucTinhTrangNguoiDung = default(EntityRef<DanhMucTinhTrangNguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNguoiDung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNguoiDung
		{
			get
			{
				return this._MaNguoiDung;
			}
			set
			{
				if ((this._MaNguoiDung != value))
				{
					this.OnMaNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaNguoiDung = value;
					this.SendPropertyChanged("MaNguoiDung");
					this.OnMaNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhMucNguoiDung", DbType="Int NOT NULL")]
		public int MaDanhMucNguoiDung
		{
			get
			{
				return this._MaDanhMucNguoiDung;
			}
			set
			{
				if ((this._MaDanhMucNguoiDung != value))
				{
					if (this._DanhMucNguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDanhMucNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaDanhMucNguoiDung = value;
					this.SendPropertyChanged("MaDanhMucNguoiDung");
					this.OnMaDanhMucNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNguoiDung", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenNguoiDung
		{
			get
			{
				return this._TenNguoiDung;
			}
			set
			{
				if ((this._TenNguoiDung != value))
				{
					this.OnTenNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._TenNguoiDung = value;
					this.SendPropertyChanged("TenNguoiDung");
					this.OnTenNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Int NOT NULL")]
		public int TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					if (this._DanhMucTinhTrangNguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BinhLuan", Storage="_BinhLuans", ThisKey="MaNguoiDung", OtherKey="MaNguoiDung")]
		public EntitySet<BinhLuan> BinhLuans
		{
			get
			{
				return this._BinhLuans;
			}
			set
			{
				this._BinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DatVe", Storage="_DatVes", ThisKey="MaNguoiDung", OtherKey="MaNguoiDung")]
		public EntitySet<DatVe> DatVes
		{
			get
			{
				return this._DatVes;
			}
			set
			{
				this._DatVes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_LichSuNguoiDung", Storage="_LichSuNguoiDungs", ThisKey="MaNguoiDung", OtherKey="MaNguoiDung")]
		public EntitySet<LichSuNguoiDung> LichSuNguoiDungs
		{
			get
			{
				return this._LichSuNguoiDungs;
			}
			set
			{
				this._LichSuNguoiDungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucNguoiDung_NguoiDung", Storage="_DanhMucNguoiDung", ThisKey="MaDanhMucNguoiDung", OtherKey="MaDanhMucNguoiDung", IsForeignKey=true)]
		public DanhMucNguoiDung DanhMucNguoiDung
		{
			get
			{
				return this._DanhMucNguoiDung.Entity;
			}
			set
			{
				DanhMucNguoiDung previousValue = this._DanhMucNguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._DanhMucNguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMucNguoiDung.Entity = null;
						previousValue.NguoiDungs.Remove(this);
					}
					this._DanhMucNguoiDung.Entity = value;
					if ((value != null))
					{
						value.NguoiDungs.Add(this);
						this._MaDanhMucNguoiDung = value.MaDanhMucNguoiDung;
					}
					else
					{
						this._MaDanhMucNguoiDung = default(int);
					}
					this.SendPropertyChanged("DanhMucNguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucTinhTrangNguoiDung_NguoiDung", Storage="_DanhMucTinhTrangNguoiDung", ThisKey="TinhTrang", OtherKey="MaDanhMucTinhTrangNguoDung", IsForeignKey=true)]
		public DanhMucTinhTrangNguoiDung DanhMucTinhTrangNguoiDung
		{
			get
			{
				return this._DanhMucTinhTrangNguoiDung.Entity;
			}
			set
			{
				DanhMucTinhTrangNguoiDung previousValue = this._DanhMucTinhTrangNguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._DanhMucTinhTrangNguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMucTinhTrangNguoiDung.Entity = null;
						previousValue.NguoiDungs.Remove(this);
					}
					this._DanhMucTinhTrangNguoiDung.Entity = value;
					if ((value != null))
					{
						value.NguoiDungs.Add(this);
						this._TinhTrang = value.MaDanhMucTinhTrangNguoDung;
					}
					else
					{
						this._TinhTrang = default(int);
					}
					this.SendPropertyChanged("DanhMucTinhTrangNguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_DatVes(DatVe entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_DatVes(DatVe entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_LichSuNguoiDungs(LichSuNguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_LichSuNguoiDungs(LichSuNguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phim")]
	public partial class Phim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhim;
		
		private string _TenPhim;
		
		private int _TheLoai;
		
		private string _DaoDien;
		
		private string _DienVienThamGia;
		
		private string _NoiDung;
		
		private string _NgonNgu;
		
		private double _ThoiLuong;
		
		private double _DiemDanhGia;
		
		private bool _TinhTrang;
		
		private string _AnhPhim;
		
		private string _TrailerPhim;
		
		private int _LoaiPhim;
		
		private EntitySet<BinhLuan> _BinhLuans;
		
		private EntitySet<SuatChieu> _SuatChieus;
		
		private EntityRef<DanhMucLoaiPhim> _DanhMucLoaiPhim;
		
		private EntityRef<DanhMucTheLoaiPhim> _DanhMucTheLoaiPhim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhimChanging(int value);
    partial void OnMaPhimChanged();
    partial void OnTenPhimChanging(string value);
    partial void OnTenPhimChanged();
    partial void OnTheLoaiChanging(int value);
    partial void OnTheLoaiChanged();
    partial void OnDaoDienChanging(string value);
    partial void OnDaoDienChanged();
    partial void OnDienVienThamGiaChanging(string value);
    partial void OnDienVienThamGiaChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgonNguChanging(string value);
    partial void OnNgonNguChanged();
    partial void OnThoiLuongChanging(double value);
    partial void OnThoiLuongChanged();
    partial void OnDiemDanhGiaChanging(double value);
    partial void OnDiemDanhGiaChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    partial void OnAnhPhimChanging(string value);
    partial void OnAnhPhimChanged();
    partial void OnTrailerPhimChanging(string value);
    partial void OnTrailerPhimChanged();
    partial void OnLoaiPhimChanging(int value);
    partial void OnLoaiPhimChanged();
    #endregion
		
		public Phim()
		{
			this._BinhLuans = new EntitySet<BinhLuan>(new Action<BinhLuan>(this.attach_BinhLuans), new Action<BinhLuan>(this.detach_BinhLuans));
			this._SuatChieus = new EntitySet<SuatChieu>(new Action<SuatChieu>(this.attach_SuatChieus), new Action<SuatChieu>(this.detach_SuatChieus));
			this._DanhMucLoaiPhim = default(EntityRef<DanhMucLoaiPhim>);
			this._DanhMucTheLoaiPhim = default(EntityRef<DanhMucTheLoaiPhim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhim", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenPhim
		{
			get
			{
				return this._TenPhim;
			}
			set
			{
				if ((this._TenPhim != value))
				{
					this.OnTenPhimChanging(value);
					this.SendPropertyChanging();
					this._TenPhim = value;
					this.SendPropertyChanged("TenPhim");
					this.OnTenPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheLoai", DbType="Int NOT NULL")]
		public int TheLoai
		{
			get
			{
				return this._TheLoai;
			}
			set
			{
				if ((this._TheLoai != value))
				{
					if (this._DanhMucTheLoaiPhim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TheLoai = value;
					this.SendPropertyChanged("TheLoai");
					this.OnTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaoDien", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DaoDien
		{
			get
			{
				return this._DaoDien;
			}
			set
			{
				if ((this._DaoDien != value))
				{
					this.OnDaoDienChanging(value);
					this.SendPropertyChanging();
					this._DaoDien = value;
					this.SendPropertyChanged("DaoDien");
					this.OnDaoDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienVienThamGia", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DienVienThamGia
		{
			get
			{
				return this._DienVienThamGia;
			}
			set
			{
				if ((this._DienVienThamGia != value))
				{
					this.OnDienVienThamGiaChanging(value);
					this.SendPropertyChanging();
					this._DienVienThamGia = value;
					this.SendPropertyChanged("DienVienThamGia");
					this.OnDienVienThamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgonNgu", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string NgonNgu
		{
			get
			{
				return this._NgonNgu;
			}
			set
			{
				if ((this._NgonNgu != value))
				{
					this.OnNgonNguChanging(value);
					this.SendPropertyChanging();
					this._NgonNgu = value;
					this.SendPropertyChanged("NgonNgu");
					this.OnNgonNguChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiLuong", DbType="Float NOT NULL")]
		public double ThoiLuong
		{
			get
			{
				return this._ThoiLuong;
			}
			set
			{
				if ((this._ThoiLuong != value))
				{
					this.OnThoiLuongChanging(value);
					this.SendPropertyChanging();
					this._ThoiLuong = value;
					this.SendPropertyChanged("ThoiLuong");
					this.OnThoiLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemDanhGia", DbType="Float NOT NULL")]
		public double DiemDanhGia
		{
			get
			{
				return this._DiemDanhGia;
			}
			set
			{
				if ((this._DiemDanhGia != value))
				{
					this.OnDiemDanhGiaChanging(value);
					this.SendPropertyChanging();
					this._DiemDanhGia = value;
					this.SendPropertyChanged("DiemDanhGia");
					this.OnDiemDanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhPhim", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AnhPhim
		{
			get
			{
				return this._AnhPhim;
			}
			set
			{
				if ((this._AnhPhim != value))
				{
					this.OnAnhPhimChanging(value);
					this.SendPropertyChanging();
					this._AnhPhim = value;
					this.SendPropertyChanged("AnhPhim");
					this.OnAnhPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrailerPhim", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TrailerPhim
		{
			get
			{
				return this._TrailerPhim;
			}
			set
			{
				if ((this._TrailerPhim != value))
				{
					this.OnTrailerPhimChanging(value);
					this.SendPropertyChanging();
					this._TrailerPhim = value;
					this.SendPropertyChanged("TrailerPhim");
					this.OnTrailerPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiPhim", DbType="Int NOT NULL")]
		public int LoaiPhim
		{
			get
			{
				return this._LoaiPhim;
			}
			set
			{
				if ((this._LoaiPhim != value))
				{
					if (this._DanhMucLoaiPhim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiPhimChanging(value);
					this.SendPropertyChanging();
					this._LoaiPhim = value;
					this.SendPropertyChanged("LoaiPhim");
					this.OnLoaiPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_BinhLuan", Storage="_BinhLuans", ThisKey="MaPhim", OtherKey="MaPhim")]
		public EntitySet<BinhLuan> BinhLuans
		{
			get
			{
				return this._BinhLuans;
			}
			set
			{
				this._BinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_SuatChieu", Storage="_SuatChieus", ThisKey="MaPhim", OtherKey="MaPhim")]
		public EntitySet<SuatChieu> SuatChieus
		{
			get
			{
				return this._SuatChieus;
			}
			set
			{
				this._SuatChieus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucLoaiPhim_Phim", Storage="_DanhMucLoaiPhim", ThisKey="LoaiPhim", OtherKey="MaLoai", IsForeignKey=true)]
		public DanhMucLoaiPhim DanhMucLoaiPhim
		{
			get
			{
				return this._DanhMucLoaiPhim.Entity;
			}
			set
			{
				DanhMucLoaiPhim previousValue = this._DanhMucLoaiPhim.Entity;
				if (((previousValue != value) 
							|| (this._DanhMucLoaiPhim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMucLoaiPhim.Entity = null;
						previousValue.Phims.Remove(this);
					}
					this._DanhMucLoaiPhim.Entity = value;
					if ((value != null))
					{
						value.Phims.Add(this);
						this._LoaiPhim = value.MaLoai;
					}
					else
					{
						this._LoaiPhim = default(int);
					}
					this.SendPropertyChanged("DanhMucLoaiPhim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucTheLoaiPhim_Phim", Storage="_DanhMucTheLoaiPhim", ThisKey="TheLoai", OtherKey="MaDanhMucTheLoaiPhim", IsForeignKey=true)]
		public DanhMucTheLoaiPhim DanhMucTheLoaiPhim
		{
			get
			{
				return this._DanhMucTheLoaiPhim.Entity;
			}
			set
			{
				DanhMucTheLoaiPhim previousValue = this._DanhMucTheLoaiPhim.Entity;
				if (((previousValue != value) 
							|| (this._DanhMucTheLoaiPhim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMucTheLoaiPhim.Entity = null;
						previousValue.Phims.Remove(this);
					}
					this._DanhMucTheLoaiPhim.Entity = value;
					if ((value != null))
					{
						value.Phims.Add(this);
						this._TheLoai = value.MaDanhMucTheLoaiPhim;
					}
					else
					{
						this._TheLoai = default(int);
					}
					this.SendPropertyChanged("DanhMucTheLoaiPhim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.Phim = this;
		}
		
		private void detach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.Phim = null;
		}
		
		private void attach_SuatChieus(SuatChieu entity)
		{
			this.SendPropertyChanging();
			entity.Phim = this;
		}
		
		private void detach_SuatChieus(SuatChieu entity)
		{
			this.SendPropertyChanging();
			entity.Phim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongChieuPhim")]
	public partial class PhongChieuPhim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhongChieuPhim;
		
		private int _MaRapChieuPhim;
		
		private string _TenPhongChieuPhim;
		
		private int _TongSoLuongGhe;
		
		private bool _TinhTrang;
		
		private EntitySet<Ghe> _Ghes;
		
		private EntitySet<SuatChieu> _SuatChieus;
		
		private EntityRef<RapChieuPhim> _RapChieuPhim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongChieuPhimChanging(int value);
    partial void OnMaPhongChieuPhimChanged();
    partial void OnMaRapChieuPhimChanging(int value);
    partial void OnMaRapChieuPhimChanged();
    partial void OnTenPhongChieuPhimChanging(string value);
    partial void OnTenPhongChieuPhimChanged();
    partial void OnTongSoLuongGheChanging(int value);
    partial void OnTongSoLuongGheChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public PhongChieuPhim()
		{
			this._Ghes = new EntitySet<Ghe>(new Action<Ghe>(this.attach_Ghes), new Action<Ghe>(this.detach_Ghes));
			this._SuatChieus = new EntitySet<SuatChieu>(new Action<SuatChieu>(this.attach_SuatChieus), new Action<SuatChieu>(this.detach_SuatChieus));
			this._RapChieuPhim = default(EntityRef<RapChieuPhim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhongChieuPhim", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhongChieuPhim
		{
			get
			{
				return this._MaPhongChieuPhim;
			}
			set
			{
				if ((this._MaPhongChieuPhim != value))
				{
					this.OnMaPhongChieuPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhongChieuPhim = value;
					this.SendPropertyChanged("MaPhongChieuPhim");
					this.OnMaPhongChieuPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaRapChieuPhim", DbType="Int NOT NULL")]
		public int MaRapChieuPhim
		{
			get
			{
				return this._MaRapChieuPhim;
			}
			set
			{
				if ((this._MaRapChieuPhim != value))
				{
					if (this._RapChieuPhim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaRapChieuPhimChanging(value);
					this.SendPropertyChanging();
					this._MaRapChieuPhim = value;
					this.SendPropertyChanged("MaRapChieuPhim");
					this.OnMaRapChieuPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhongChieuPhim", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenPhongChieuPhim
		{
			get
			{
				return this._TenPhongChieuPhim;
			}
			set
			{
				if ((this._TenPhongChieuPhim != value))
				{
					this.OnTenPhongChieuPhimChanging(value);
					this.SendPropertyChanging();
					this._TenPhongChieuPhim = value;
					this.SendPropertyChanged("TenPhongChieuPhim");
					this.OnTenPhongChieuPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSoLuongGhe", DbType="Int NOT NULL")]
		public int TongSoLuongGhe
		{
			get
			{
				return this._TongSoLuongGhe;
			}
			set
			{
				if ((this._TongSoLuongGhe != value))
				{
					this.OnTongSoLuongGheChanging(value);
					this.SendPropertyChanging();
					this._TongSoLuongGhe = value;
					this.SendPropertyChanged("TongSoLuongGhe");
					this.OnTongSoLuongGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongChieuPhim_Ghe", Storage="_Ghes", ThisKey="MaPhongChieuPhim", OtherKey="MaPhongChieuPhim")]
		public EntitySet<Ghe> Ghes
		{
			get
			{
				return this._Ghes;
			}
			set
			{
				this._Ghes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongChieuPhim_SuatChieu", Storage="_SuatChieus", ThisKey="MaPhongChieuPhim", OtherKey="MaPhong")]
		public EntitySet<SuatChieu> SuatChieus
		{
			get
			{
				return this._SuatChieus;
			}
			set
			{
				this._SuatChieus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RapChieuPhim_PhongChieuPhim", Storage="_RapChieuPhim", ThisKey="MaRapChieuPhim", OtherKey="MaRapChieuPhim", IsForeignKey=true)]
		public RapChieuPhim RapChieuPhim
		{
			get
			{
				return this._RapChieuPhim.Entity;
			}
			set
			{
				RapChieuPhim previousValue = this._RapChieuPhim.Entity;
				if (((previousValue != value) 
							|| (this._RapChieuPhim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RapChieuPhim.Entity = null;
						previousValue.PhongChieuPhims.Remove(this);
					}
					this._RapChieuPhim.Entity = value;
					if ((value != null))
					{
						value.PhongChieuPhims.Add(this);
						this._MaRapChieuPhim = value.MaRapChieuPhim;
					}
					else
					{
						this._MaRapChieuPhim = default(int);
					}
					this.SendPropertyChanged("RapChieuPhim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.PhongChieuPhim = this;
		}
		
		private void detach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.PhongChieuPhim = null;
		}
		
		private void attach_SuatChieus(SuatChieu entity)
		{
			this.SendPropertyChanging();
			entity.PhongChieuPhim = this;
		}
		
		private void detach_SuatChieus(SuatChieu entity)
		{
			this.SendPropertyChanging();
			entity.PhongChieuPhim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RapChieuPhim")]
	public partial class RapChieuPhim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaRapChieuPhim;
		
		private string _TenRapChieuPhim;
		
		private string _DiaChiRapChieuPhim;
		
		private string _SoDienThoaiRapChieuPhim;
		
		private string _AnhDaiDienRapChieuPhim;
		
		private string _ThongTinKhac;
		
		private bool _TinhTrang;
		
		private EntitySet<PhongChieuPhim> _PhongChieuPhims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaRapChieuPhimChanging(int value);
    partial void OnMaRapChieuPhimChanged();
    partial void OnTenRapChieuPhimChanging(string value);
    partial void OnTenRapChieuPhimChanged();
    partial void OnDiaChiRapChieuPhimChanging(string value);
    partial void OnDiaChiRapChieuPhimChanged();
    partial void OnSoDienThoaiRapChieuPhimChanging(string value);
    partial void OnSoDienThoaiRapChieuPhimChanged();
    partial void OnAnhDaiDienRapChieuPhimChanging(string value);
    partial void OnAnhDaiDienRapChieuPhimChanged();
    partial void OnThongTinKhacChanging(string value);
    partial void OnThongTinKhacChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public RapChieuPhim()
		{
			this._PhongChieuPhims = new EntitySet<PhongChieuPhim>(new Action<PhongChieuPhim>(this.attach_PhongChieuPhims), new Action<PhongChieuPhim>(this.detach_PhongChieuPhims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaRapChieuPhim", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaRapChieuPhim
		{
			get
			{
				return this._MaRapChieuPhim;
			}
			set
			{
				if ((this._MaRapChieuPhim != value))
				{
					this.OnMaRapChieuPhimChanging(value);
					this.SendPropertyChanging();
					this._MaRapChieuPhim = value;
					this.SendPropertyChanged("MaRapChieuPhim");
					this.OnMaRapChieuPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenRapChieuPhim", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenRapChieuPhim
		{
			get
			{
				return this._TenRapChieuPhim;
			}
			set
			{
				if ((this._TenRapChieuPhim != value))
				{
					this.OnTenRapChieuPhimChanging(value);
					this.SendPropertyChanging();
					this._TenRapChieuPhim = value;
					this.SendPropertyChanged("TenRapChieuPhim");
					this.OnTenRapChieuPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiRapChieuPhim", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DiaChiRapChieuPhim
		{
			get
			{
				return this._DiaChiRapChieuPhim;
			}
			set
			{
				if ((this._DiaChiRapChieuPhim != value))
				{
					this.OnDiaChiRapChieuPhimChanging(value);
					this.SendPropertyChanging();
					this._DiaChiRapChieuPhim = value;
					this.SendPropertyChanged("DiaChiRapChieuPhim");
					this.OnDiaChiRapChieuPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoaiRapChieuPhim", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string SoDienThoaiRapChieuPhim
		{
			get
			{
				return this._SoDienThoaiRapChieuPhim;
			}
			set
			{
				if ((this._SoDienThoaiRapChieuPhim != value))
				{
					this.OnSoDienThoaiRapChieuPhimChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoaiRapChieuPhim = value;
					this.SendPropertyChanged("SoDienThoaiRapChieuPhim");
					this.OnSoDienThoaiRapChieuPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhDaiDienRapChieuPhim", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AnhDaiDienRapChieuPhim
		{
			get
			{
				return this._AnhDaiDienRapChieuPhim;
			}
			set
			{
				if ((this._AnhDaiDienRapChieuPhim != value))
				{
					this.OnAnhDaiDienRapChieuPhimChanging(value);
					this.SendPropertyChanging();
					this._AnhDaiDienRapChieuPhim = value;
					this.SendPropertyChanged("AnhDaiDienRapChieuPhim");
					this.OnAnhDaiDienRapChieuPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThongTinKhac", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ThongTinKhac
		{
			get
			{
				return this._ThongTinKhac;
			}
			set
			{
				if ((this._ThongTinKhac != value))
				{
					this.OnThongTinKhacChanging(value);
					this.SendPropertyChanging();
					this._ThongTinKhac = value;
					this.SendPropertyChanged("ThongTinKhac");
					this.OnThongTinKhacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RapChieuPhim_PhongChieuPhim", Storage="_PhongChieuPhims", ThisKey="MaRapChieuPhim", OtherKey="MaRapChieuPhim")]
		public EntitySet<PhongChieuPhim> PhongChieuPhims
		{
			get
			{
				return this._PhongChieuPhims;
			}
			set
			{
				this._PhongChieuPhims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhongChieuPhims(PhongChieuPhim entity)
		{
			this.SendPropertyChanging();
			entity.RapChieuPhim = this;
		}
		
		private void detach_PhongChieuPhims(PhongChieuPhim entity)
		{
			this.SendPropertyChanging();
			entity.RapChieuPhim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuatChieu")]
	public partial class SuatChieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSuatChieu;
		
		private int _MaLichChieu;
		
		private int _MaPhong;
		
		private int _MaPhim;
		
		private int _MaDanhMucSuatChieu;
		
		private EntitySet<DatVe> _DatVes;
		
		private EntityRef<DanhMucSuatChieu> _DanhMucSuatChieu;
		
		private EntityRef<LichChieuPhim> _LichChieuPhim;
		
		private EntityRef<Phim> _Phim;
		
		private EntityRef<PhongChieuPhim> _PhongChieuPhim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSuatChieuChanging(int value);
    partial void OnMaSuatChieuChanged();
    partial void OnMaLichChieuChanging(int value);
    partial void OnMaLichChieuChanged();
    partial void OnMaPhongChanging(int value);
    partial void OnMaPhongChanged();
    partial void OnMaPhimChanging(int value);
    partial void OnMaPhimChanged();
    partial void OnMaDanhMucSuatChieuChanging(int value);
    partial void OnMaDanhMucSuatChieuChanged();
    #endregion
		
		public SuatChieu()
		{
			this._DatVes = new EntitySet<DatVe>(new Action<DatVe>(this.attach_DatVes), new Action<DatVe>(this.detach_DatVes));
			this._DanhMucSuatChieu = default(EntityRef<DanhMucSuatChieu>);
			this._LichChieuPhim = default(EntityRef<LichChieuPhim>);
			this._Phim = default(EntityRef<Phim>);
			this._PhongChieuPhim = default(EntityRef<PhongChieuPhim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSuatChieu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSuatChieu
		{
			get
			{
				return this._MaSuatChieu;
			}
			set
			{
				if ((this._MaSuatChieu != value))
				{
					this.OnMaSuatChieuChanging(value);
					this.SendPropertyChanging();
					this._MaSuatChieu = value;
					this.SendPropertyChanged("MaSuatChieu");
					this.OnMaSuatChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLichChieu", DbType="Int NOT NULL")]
		public int MaLichChieu
		{
			get
			{
				return this._MaLichChieu;
			}
			set
			{
				if ((this._MaLichChieu != value))
				{
					if (this._LichChieuPhim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLichChieuChanging(value);
					this.SendPropertyChanging();
					this._MaLichChieu = value;
					this.SendPropertyChanged("MaLichChieu");
					this.OnMaLichChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="Int NOT NULL")]
		public int MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._PhongChieuPhim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int NOT NULL")]
		public int MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					if (this._Phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhMucSuatChieu", DbType="Int NOT NULL")]
		public int MaDanhMucSuatChieu
		{
			get
			{
				return this._MaDanhMucSuatChieu;
			}
			set
			{
				if ((this._MaDanhMucSuatChieu != value))
				{
					if (this._DanhMucSuatChieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDanhMucSuatChieuChanging(value);
					this.SendPropertyChanging();
					this._MaDanhMucSuatChieu = value;
					this.SendPropertyChanged("MaDanhMucSuatChieu");
					this.OnMaDanhMucSuatChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuatChieu_DatVe", Storage="_DatVes", ThisKey="MaSuatChieu", OtherKey="MaSuatChieu")]
		public EntitySet<DatVe> DatVes
		{
			get
			{
				return this._DatVes;
			}
			set
			{
				this._DatVes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucSuatChieu_SuatChieu", Storage="_DanhMucSuatChieu", ThisKey="MaDanhMucSuatChieu", OtherKey="MaDanhMucSuatChieu", IsForeignKey=true)]
		public DanhMucSuatChieu DanhMucSuatChieu
		{
			get
			{
				return this._DanhMucSuatChieu.Entity;
			}
			set
			{
				DanhMucSuatChieu previousValue = this._DanhMucSuatChieu.Entity;
				if (((previousValue != value) 
							|| (this._DanhMucSuatChieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMucSuatChieu.Entity = null;
						previousValue.SuatChieus.Remove(this);
					}
					this._DanhMucSuatChieu.Entity = value;
					if ((value != null))
					{
						value.SuatChieus.Add(this);
						this._MaDanhMucSuatChieu = value.MaDanhMucSuatChieu;
					}
					else
					{
						this._MaDanhMucSuatChieu = default(int);
					}
					this.SendPropertyChanged("DanhMucSuatChieu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichChieuPhim_SuatChieu", Storage="_LichChieuPhim", ThisKey="MaLichChieu", OtherKey="MaLichChieuPhim", IsForeignKey=true)]
		public LichChieuPhim LichChieuPhim
		{
			get
			{
				return this._LichChieuPhim.Entity;
			}
			set
			{
				LichChieuPhim previousValue = this._LichChieuPhim.Entity;
				if (((previousValue != value) 
							|| (this._LichChieuPhim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LichChieuPhim.Entity = null;
						previousValue.SuatChieus.Remove(this);
					}
					this._LichChieuPhim.Entity = value;
					if ((value != null))
					{
						value.SuatChieus.Add(this);
						this._MaLichChieu = value.MaLichChieuPhim;
					}
					else
					{
						this._MaLichChieu = default(int);
					}
					this.SendPropertyChanged("LichChieuPhim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_SuatChieu", Storage="_Phim", ThisKey="MaPhim", OtherKey="MaPhim", IsForeignKey=true)]
		public Phim Phim
		{
			get
			{
				return this._Phim.Entity;
			}
			set
			{
				Phim previousValue = this._Phim.Entity;
				if (((previousValue != value) 
							|| (this._Phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phim.Entity = null;
						previousValue.SuatChieus.Remove(this);
					}
					this._Phim.Entity = value;
					if ((value != null))
					{
						value.SuatChieus.Add(this);
						this._MaPhim = value.MaPhim;
					}
					else
					{
						this._MaPhim = default(int);
					}
					this.SendPropertyChanged("Phim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongChieuPhim_SuatChieu", Storage="_PhongChieuPhim", ThisKey="MaPhong", OtherKey="MaPhongChieuPhim", IsForeignKey=true)]
		public PhongChieuPhim PhongChieuPhim
		{
			get
			{
				return this._PhongChieuPhim.Entity;
			}
			set
			{
				PhongChieuPhim previousValue = this._PhongChieuPhim.Entity;
				if (((previousValue != value) 
							|| (this._PhongChieuPhim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongChieuPhim.Entity = null;
						previousValue.SuatChieus.Remove(this);
					}
					this._PhongChieuPhim.Entity = value;
					if ((value != null))
					{
						value.SuatChieus.Add(this);
						this._MaPhong = value.MaPhongChieuPhim;
					}
					else
					{
						this._MaPhong = default(int);
					}
					this.SendPropertyChanged("PhongChieuPhim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatVes(DatVe entity)
		{
			this.SendPropertyChanging();
			entity.SuatChieu = this;
		}
		
		private void detach_DatVes(DatVe entity)
		{
			this.SendPropertyChanging();
			entity.SuatChieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThamSo")]
	public partial class ThamSo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThamSo;
		
		private string _TenThamSo;
		
		private string _Kieu;
		
		private string _GiaTri;
		
		private bool _TinhTrang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThamSoChanging(int value);
    partial void OnMaThamSoChanged();
    partial void OnTenThamSoChanging(string value);
    partial void OnTenThamSoChanged();
    partial void OnKieuChanging(string value);
    partial void OnKieuChanged();
    partial void OnGiaTriChanging(string value);
    partial void OnGiaTriChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public ThamSo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThamSo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaThamSo
		{
			get
			{
				return this._MaThamSo;
			}
			set
			{
				if ((this._MaThamSo != value))
				{
					this.OnMaThamSoChanging(value);
					this.SendPropertyChanging();
					this._MaThamSo = value;
					this.SendPropertyChanged("MaThamSo");
					this.OnMaThamSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThamSo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TenThamSo
		{
			get
			{
				return this._TenThamSo;
			}
			set
			{
				if ((this._TenThamSo != value))
				{
					this.OnTenThamSoChanging(value);
					this.SendPropertyChanging();
					this._TenThamSo = value;
					this.SendPropertyChanged("TenThamSo");
					this.OnTenThamSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kieu", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string Kieu
		{
			get
			{
				return this._Kieu;
			}
			set
			{
				if ((this._Kieu != value))
				{
					this.OnKieuChanging(value);
					this.SendPropertyChanging();
					this._Kieu = value;
					this.SendPropertyChanged("Kieu");
					this.OnKieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTri", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string GiaTri
		{
			get
			{
				return this._GiaTri;
			}
			set
			{
				if ((this._GiaTri != value))
				{
					this.OnGiaTriChanging(value);
					this.SendPropertyChanging();
					this._GiaTri = value;
					this.SendPropertyChanged("GiaTri");
					this.OnGiaTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
